name: Windows Release

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release-Windows-VS-VS

jobs:
  build:
    name: ${{matrix.os}}, ${{matrix.std}}, ${{matrix.build_type}}, ${{matrix.platform}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ windows-2019, windows-2022 ]
        platform: [ x64 ]
        build_type: [ Release-Windows-VS-VS ]

    steps:
      - uses: actions/checkout@v3

      - name: Initialize Submodules
        run: git submodule update --init --recursive

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: 1.3.243.0
          cache: true

      - name: Run Setup Script
        run: ${{github.workspace}}/Scripts/install-vulkan.ps1 # Run your setup script

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake --preset ${{env.BUILD_TYPE}} -S ${{github.workspace}} -B ${{github.workspace}}/Build-Release/
        shell: cmd

      - name: Build
        # Build your program with the given configuration
        run: cmake --build --config RelWithDebInfo --preset ${{env.BUILD_TYPE}} --parallel %NUMBER_OF_PROCESSORS%
        shell: cmd

      - name: CTest
        working-directory: ${{github.workspace}}/Build-Release/
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
      - name: Catch2
        run: ${{github.workspace}}/Build-Release/Tests/RelWithDebInfo/AntlerTest.exe -r xml -d yes --order lex

        continue-on-error: true
